#!/bin/sh

. "$SCRIPTS_HOME/scriptsrc"
. "$lib/lines"
. "$lib/args"

keys() {
    use_pipe=false
    delim=" ; "
    pattern='!/^ *#/ && NF {print $1}'

    file=""
    list=""

    for arg in "$@"; do
        case $arg in
            --delim=*) delim=$(get_arg_value "--delim=" "$arg") ;;
            --pattern=*) pattern=$(get_arg_value "--pattern=" "$arg") ;;
            --file=*) file=$(get_arg_value "--file=" "$arg") ;;
            --list=*) list=$(get_arg_value "--list=" "$arg") ;;
            --use-pipe) use_pipe=true ;;
        esac
    done

    if [ "$use_pipe" = true ]; then
        awk -F "$delim" "$pattern"
    elif [ -r "$file" ]; then
        awk -F "$delim" "$pattern" "$file"
    elif [ "$list" ]; then
        echo "$list" | awk -F "$delim" "$pattern"
    fi
}

value() {
    use_pipe=false
    delim=" ; "
    index=2

    key=""

    file=""
    list=""

    for arg in "$@"; do
        case $arg in
            --delim=*) delim=$(get_arg_value "--delim=" "$arg") ;;
            --index=*) index=$(get_arg_value "--index=" "$arg") ;;
            --file=*) file=$(get_arg_value "--file=" "$arg") ;;
            --list=*) list=$(get_arg_value "--list=" "$arg") ;;
            --use-pipe) use_pipe=true ;;
            *) key="$arg" ;;
        esac
    done

    if [ ! "$index" -ge 1 ] 2>/dev/null
    then
        index=1
    fi

    key=$(enc --awk-regex "$key")

    if [ "$use_pipe" = true ]; then
        awk -F "$delim" "/^$key$delim/ {print \$$index}"
    elif [ -r "$file" ]; then
        awk -F "$delim" "/^$key$delim/ {print \$$index}" "$file"
    elif [ "$list" ]; then
        echo "$list" | awk -F "$delim" "/^$key$delim/ {print \$$index}"
    fi
}

get_column() {
    use_pipe=false
    delim=" ; "

    index=1

    file=""
    list=""

    for arg in "$@"; do
        case $arg in
            --delim=*) delim=$(get_arg_value "--delim=" "$arg") ;;
            --file=*) file=$(get_arg_value "--file=" "$arg") ;;
            --list=*) list=$(get_arg_value "--list=" "$arg") ;;
            --use-pipe) use_pipe=true ;;
            *) index="$arg" ;;
        esac
    done

    if [ ! "$index" -ge 1 ] 2>/dev/null; then
        index=1
    fi

    if [ "$use_pipe" = true ]; then
        awk -F "$delim" "{print \$$index}" "$2"
    elif [ -r "$file" ]; then
        awk -F "$delim" "{print \$$index}" "$file"
    elif [ "$list" ]; then
        echo "$list" | awk -F "$delim" "{print \$$index}"
    fi
}

get_row() {
    use_pipe=false
    delim=" ; "

    index=1

    file=""
    list=""

    for arg in "$@"; do
        case $arg in
            --delim=*) delim=$(get_arg_value "--delim=" "$arg") ;;
            --file=*) file=$(get_arg_value "--file=" "$arg") ;;
            --list=*) list=$(get_arg_value "--list=" "$arg") ;;
            --use-pipe) use_pipe=true ;;
            *) index="$arg" ;;
        esac
    done

    if [ ! "$index" -ge 1 ] 2>/dev/null
    then
        index=1
    fi

    if [ "$use_pipe" = true ]; then
        sed -n "$index p"
    elif [ -r "$file" ]; then
        sed -n "$index p" "$file"
    elif [ "$list" ]; then
        echo "$list" | sed -n "$index p"
    fi
}

