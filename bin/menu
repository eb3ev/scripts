#!/bin/sh

. "$SCRIPTS_HOME/scriptsrc"
. "$lib/var/config"
. "$lib/program"
. "$lib/args"

use_fuzzy="false"
use_alt="false"
always_match="false"
hidden="false"
custom_args=""
prompt=""

exec_menu() {
    eval "$1 $2"
}

default_menu() {
    exec_menu "dmenu"
}

get_window_menu_args() {
    args=""

    if [ "$use_fuzzy" = "true" ]
    then
        args="$args -F"
    fi
    if [ "$use_alt" = "true" ]
    then
        args="$args -bw 4"
    fi
    if [ "$always_match" = "true" ]
    then
        args="$args -r"
    fi
    if [ "$hidden" = "true" ]
    then
        args="$args -P"
    fi
    if [ -n "$prompt" ]
    then
        args="$args -p \"$prompt\""
    fi

    echo "$args $custom_args"
}

top_window_menu() {
    base_dmenu="dmenu -fn 'Noto Sans-11' -i -h 26 -mn 1 -bw 1"

    exec_menu "$base_dmenu" "$(get_window_menu_args)"
}

center_window_menu() {
    base_dmenu="dmenu -fn 'Noto Sans-12' -i -h 26 -mn 1 -bw 1 -c -l 5"

    exec_menu "$base_dmenu" "$(get_window_menu_args)"
}

bottom_window_menu() {
    base_dmenu="dmenu -fn 'Noto Sans-11' -i -h 26 -mn 1 -bw 1 -b"

    exec_menu "$base_dmenu" "$(get_window_menu_args)"
}

get_term_menu_args() {
    args=""

    if [ -n "$prompt" ]
    then
        args="$args --prompt=\"$prompt \""
    fi

    echo "$args"
}

term_menu() {
    exec_menu "fzf" "$(get_term_menu_args)"
}

term_window_menu() {
    tmp_list=$(mktemp)
    tmp_result=$(mktemp)

    cat > "$tmp_list" 2>/dev/null

    if [ "$(installed "xterm")" = "true" ]
    then
        override_term_cmd="xterm -T Menu -e" term_exec --no-fork "fzf $(get_term_menu_args) > \"$tmp_result\" < \"$tmp_list\""
    else
        term_exec --no-fork "fzf $(get_term_menu_args) > \"$tmp_result\" < \"$tmp_list\""
    fi

    value=$(cat "$tmp_result" 2>/dev/null)

    rm -f -- "$tmp_list" "$tmp_result"

    echo "$value"
}

for arg in "$@"
do
    case "$arg" in
        "--prompt="*) prompt=$(get_arg_value "--prompt=" "$arg") ;;
        "--custom="*) custom_args=$(get_arg_value "--custom=" "$arg") ;;
        "-"*)
            case "$arg" in
                *"f"*) use_fuzzy="true" ;;
            esac
            case "$arg" in
                *"a"*) use_alt="true" ;;
            esac
            case "$arg" in
                *"m"*) always_match="true" ;;
            esac
            case "$arg" in
                *"h"*) hidden="true" ;;
            esac
            ;;
    esac
done

if [ -n "$DISPLAY" ]
then
    config="${override_menu:-$(cat "$menurc" 2>/dev/null)}"

    case "$config" in
        "top_window") top_window_menu ;;
        "center_window") center_window_menu ;;
        "bottom_window") bottom_window_menu ;;
        "term_window") term_window_menu ;;
        "term") term_menu ;;
        *) default_menu ;;
    esac
else
    term_menu
fi

