#!/bin/sh

. "${SCRIPTS_DIR:-${0%/*}/..}/scriptsrc"
. "$lib/var/cache"
. "$lib/lines"
. "$lib/clipboard"

run="true"
require_sudo="false"
use_history="false"

get_scripts_list() {
    ls -F1 "$bin" | awk '/\*$/' | sed 's/\*$//g'
}

get_scripts_history() {
    scripts_list=$(get_scripts_list)

    if [ ! -e "$scripts_history" ]
    then
        echo "$scripts_list" > "$scripts_history"
    fi

    sync_file_list "$scripts_history" "$scripts_list"

    cat "$scripts_history"
}

for arg in "$@"
do
    case "$arg" in
        "--sudo") require_sudo="true" ;;
        "--use-history") use_history="true" ;;
        "--print-cmd") run="false" ;;
    esac
done

script_list=$()

if [ "$use_history" = "true" ]
then
    script_list=$(get_scripts_history)
else
    script_list=$(get_scripts_list)
fi

if [ "$require_sudo" = "true" ]
then
    script=$(echo "$script_list" | menu 4 "Run")
else
    script=$(echo "$script_list" | menu 2 "Run")
fi

if [ -n "$script" ]
then
    if [ "$use_history" = "true" ]
    then
        to_top "$script" "$scripts_history"
    fi
    
    if [ "$require_sudo" = "true" ]
    then
        if [ "$run" = "true" ]
        then
            SUDO_ASKPASS="$bin/passwd_prompt" sudo -A $bin/$script
        else
            echo "SUDO_ASKPASS="$bin/passwd_prompt" sudo -A $bin/$script"
        fi
    else
        if [ "$run" = "true" ]
        then
            $bin/$script
        else
            echo "$bin/$script"
        fi
    fi
fi

